@model WebPhonebook.Models.GenerateViewModel
@{
    ViewData["Title"] = "Generate Unique Names";
}

<h2>Generate Unique Names</h2>

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div style="border: 1px solid #ccc; padding: 10px; background-color: #f9f9f9; margin-bottom: 10px;">
        <strong>@TempData["Message"]</strong>
    </div>
}

<form asp-action="Generate" asp-controller="People" asp-route-selectedHandler="@Model.SelectedHandler">
    <button type="submit">Start Generation</button>
</form>

<form asp-action="StopGeneration" asp-controller="People" asp-route-selectedHandler="@Model.SelectedHandler">
    <button type="submit" style="background-color: red; color: white;">Stop Generation</button>
</form>

<p id="status"></p>

<form id="handlerForm" asp-action="HandlerSwitch" method="post">
    <label>
        <input type="radio" asp-for="SelectedHandler" value="sql" onchange="handlerSwitch()" />
        Use SQL Database
    </label>
    <label style="margin-left: 10px;">
        <input type="radio" asp-for="SelectedHandler" value="ef" onchange="handlerSwitch()" />
        Use EF Core Database
    </label>
    <br /><br />
</form>

<script>
    function updateStatus() {
        fetch('/People/GetGenerationStatus')
            .then(response => response.text())
            .then(data => {
                document.getElementById("status").innerText = data;
                setTimeout(updateStatus, 3000);
            });
    }

    function handlerSwitch() {
        const handlerForm = document.getElementById('handlerForm');
        handlerForm.submit();
    }

    updateStatus();
</script>
