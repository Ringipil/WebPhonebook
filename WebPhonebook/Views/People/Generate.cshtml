@model WebPhonebook.Models.GenerateViewModel
@{
    ViewData["Title"] = "Generate Unique Names";
}

<div class="container mt-4">
    <h2 class="mb-4">Generate Unique Names</h2>

    @if (!string.IsNullOrEmpty(TempData["Message"] as string))
    {
        <div class="alert alert-info">
            <strong>@TempData["Message"]</strong>
        </div>
    }

    <div class="card mb-4">
        <div class="card-body">
            <div class="d-flex gap-3 mb-4">
                <form asp-action="Generate" asp-controller="People" asp-route-selectedHandler="@Model.SelectedHandler">
                    <button type="submit" class="btn btn-success">Start Generation</button>
                </form>

                <form asp-action="StopGeneration" asp-controller="People" asp-route-selectedHandler="@Model.SelectedHandler">
                    <button type="submit" class="btn btn-danger">Stop Generation</button>
                </form>
            </div>

            <div class="alert alert-info">
                <h5 class="alert-heading">Status</h5>
                <p id="status" class="mb-0">Checking status...</p>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Database Handler</h5>
        </div>
        <div class="card-body">
            <form id="handlerForm" asp-action="HandlerSwitch" method="post" class="d-flex gap-4">
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="SelectedHandler" value="sql" id="sqlHandler" onchange="handlerSwitch()" />
                    <label class="form-check-label" for="sqlHandler">Use SQL Database</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="SelectedHandler" value="ef" id="efHandler" onchange="handlerSwitch()" />
                    <label class="form-check-label" for="efHandler">Use EF Core Database</label>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function updateStatus() {
        fetch('@Url.Action("GetGenerationStatus", "People")')
            .then(response => response.text())
            .then(data => {
                document.getElementById("status").innerText = data;
                setTimeout(updateStatus, 3000);
            });
    }

    function handlerSwitch() {
        const handlerForm = document.getElementById('handlerForm');
        handlerForm.submit();
    }

    updateStatus();
</script>
